// <auto-generated />
using System;
using ClinicalApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClinicalApi.Migrations
{
    [DbContext(typeof(ClinicalApiContext))]
    partial class ClinicalApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClinicalApi.Models.Bed", b =>
                {
                    b.Property<int>("bedId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bedCode")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<int>("roomId");

                    b.HasKey("bedId");

                    b.HasIndex("roomId");

                    b.ToTable("Beds");
                });

            modelBuilder.Entity("ClinicalApi.Models.Doctor", b =>
                {
                    b.Property<int>("doctorId");

                    b.Property<string>("doctorSpecialty")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.HasKey("doctorId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("ClinicalApi.Models.Nurse", b =>
                {
                    b.Property<int>("nurseId");

                    b.Property<string>("nurseSpecialty")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.HasKey("nurseId");

                    b.ToTable("Nurses");
                });

            modelBuilder.Entity("ClinicalApi.Models.Person", b =>
                {
                    b.Property<int>("personId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("adressePers")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<DateTime>("personBirthDate");

                    b.Property<string>("personEmail")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<string>("personGender")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("personMaritalStatus")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("personNIC")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("personName")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<string>("prenomPers")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.HasKey("personId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("ClinicalApi.Models.Room", b =>
                {
                    b.Property<int>("roomId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("roomCode")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<string>("roomName")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.HasKey("roomId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("ClinicalApi.Models.Staff", b =>
                {
                    b.Property<int>("staffId");

                    b.Property<string>("roleSpecialty")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.HasKey("staffId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("ClinicalApi.Models.Bed", b =>
                {
                    b.HasOne("ClinicalApi.Models.Room", "room")
                        .WithMany()
                        .HasForeignKey("roomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClinicalApi.Models.Doctor", b =>
                {
                    b.HasOne("ClinicalApi.Models.Person", "person")
                        .WithMany()
                        .HasForeignKey("doctorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClinicalApi.Models.Nurse", b =>
                {
                    b.HasOne("ClinicalApi.Models.Person", "person")
                        .WithMany()
                        .HasForeignKey("nurseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClinicalApi.Models.Staff", b =>
                {
                    b.HasOne("ClinicalApi.Models.Person", "person")
                        .WithMany()
                        .HasForeignKey("staffId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
